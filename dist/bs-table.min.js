(function($){"use strict";$.bsTable={defaults:{classes:"table",toolbar:null,pagination:true,sidePagination:"server",paginationVAlign:"bottom",paginationHAlign:"end",pageNumber:1,search:true,pageSize:10,pageList:[10,25,50,100,200,"All"],sortName:null,sortOrder:"asc",showRefresh:true,showHeader:true,showFooter:true,url:null,data:null,columns:[],rowStyle(row,index,$tr){},queryParams(params){return params},responseHandler(res){return res},onLoadSuccess(){},onLoadError(){},onPageChange(){},onPostBody(){},formatNoMatches(){return`<i class="bi bi-x-lg fs-3"></i>`},debug:false}};const wrapperClass="bs-table-wrapper";const wrapperTableClass="bs-table-inner-wrapper";const wrapperOverlayClass="bs-table-wrapper-overlay";const wrapperSearchClass="bs-table-wrapper-search";const wrapperPaginationClass="bs-table-pagination-container";const wrapperPaginationDetailsClass="bs-table-pagination-details";const inputSearchClass="bs-table-search-input";const namespace=".bs.table";$.fn.bsTable=function(optionsOrMethod,...args){if($(this).length===0){return}if($(this).length>1){return $(this).each(function(){return $(this).bsTable(optionsOrMethod,...args)})}const $table=$(this);if(!$table.data("bsTable")){const options=typeof optionsOrMethod==="object"?optionsOrMethod:{};const bsTable={settings:$.extend(true,{},$.bsTable.defaults,$table.data()||{},options)};$table.data("bsTable",bsTable);$table.data("sort",[]);buildTable($table);events($table)}if(typeof optionsOrMethod==="string"){switch(optionsOrMethod){case"showLoading":showLoading($table);break;case"hideLoading":hideLoading($table);break;case"refresh":const arg=args.length?args[0]:null;refresh($table,arg);break}}return $table};function refresh($table,options=null){const settings=getSettings($table);let silent=false;let pageNumber=settings.pageNumber??1;let pageSize=settings.pageSize??10;let url=settings.url;let update=false;if(options&&typeof options==="object"){if(options.silent)silent=options.silent;if(options.pageNumber){pageNumber=Math.max(1,options.pageNumber);update=true}if(options.pageSize){pageSize=options.pageSize;update=true}if(options.url){url=options.url;update=true}}if(pageSize===0){pageNumber=1}if(update){settings.pageNumber=pageNumber;settings.pageSize=pageSize;setSettings($table,settings)}if(!silent){showLoading($table)}fetchData($table).then(()=>{renderTable($table,silent)}).catch(error=>{console.error("Fehler beim Abrufen der Daten:",error)}).finally(()=>{hideLoading($table)})}function fetchData($table){const settings=getSettings($table);if(settings.debug){console.groupCollapsed("fetchData");console.log("Starte fetchData für Tabelle:",$table)}return new Promise((resolve,reject)=>{if(settings.debug){console.log("Einstellungen geladen:",settings)}if(!settings.url&&!(settings.data&&Array.isArray(settings.data))){if(settings.debug){console.error("Fehler: Weder eine API-URL noch lokale Daten konfiguriert.")}reject(new Error("Neither a URL nor local data were provided."));return}let params={};const pageNumber=settings.pageNumber>0?settings.pageNumber:1;const pageSize=settings.pageSize??10;if(pageSize===0){if(settings.debug){console.log("Besonderer Fall: pageSize = 0 (Alle Datensätze anzeigen).")}params.limit=null;params.offset=0}else{const offset=(pageNumber-1)*pageSize;params.limit=pageSize;params.offset=offset;if(settings.debug){console.log("Pagination-Parameter berechnet:",params)}}const searchInput=getSearchInput($table);if(settings.search&&searchInput.length){const searchValue=searchInput.val()?.trim()||null;params.search=searchValue&&!isValueEmpty(searchValue)?searchValue:null;if(settings.debug){console.log("Suchkriterien verarbeitet:",params.search)}}if(typeof settings.queryParams==="function"){params=settings.queryParams(params);if(settings.debug){console.log("Zusätzliche Query-Parameter:",params)}}if(Array.isArray(settings.data)){if(settings.debug){console.log("Lokale Daten erkannt. Verarbeite lokale Daten...")}let filteredData=settings.data;if(params.search){if(settings.debug){console.log("Suchfilter wird angewendet: ",params.search)}filteredData=filteredData.filter(row=>Object.values(row).some(value=>value&&value.toString().toLowerCase().includes(params.search.toLowerCase())));if(settings.debug){console.log(`Gefilterte Datenanzahl nach Suchkriterien (${params.search}):`,filteredData.length)}}const totalRows=filteredData.length;if(pageSize===0){if(settings.debug){console.log("Alle Daten für pageSize = 0 zurückgeben:",totalRows,"Datensätze.")}$table.data("response",{rows:filteredData,total:totalRows});if(settings.debug){console.groupEnd()}resolve();return}const offset=params.offset||0;const start=Math.min(totalRows,offset);const end=Math.min(totalRows,start+pageSize);const rowsToRender=end-start;if(settings.debug){console.log(`Pagination-Details: Offset=${offset}, Start=${start}, End=${end}, Rows to Render=${rowsToRender}`)}if(rowsToRender<=0){if(settings.debug){console.warn("Pagination-Ergebnis ist leer. Es gibt keine Daten für diese Seite.")}$table.data("response",{rows:[],total:totalRows});if(settings.debug){console.groupEnd()}resolve();return}const slicedData=filteredData.slice(start,end);if(settings.debug){console.log("Daten für aktuelle Seite (Slice-Ergebnis):",slicedData)}$table.data("response",{rows:slicedData,total:totalRows});if(settings.debug){console.groupEnd()}resolve();return}if(settings.url){if(settings.debug){console.log("Hole Daten vom Server:",settings.url,"mit Parametern:",params)}$.ajax({url:settings.url,method:"GET",data:params,dataType:"json"}).done(response=>{const processedResponse=Array.isArray(response)?{rows:response,total:response.length}:{rows:response.rows||[],total:response.total||0};if(settings.debug){console.log("API-Antwort erhalten:",processedResponse)}$table.data("response",processedResponse);if(settings.debug){console.groupEnd()}resolve()}).fail((xhr,status,error)=>{if(settings.debug){console.error("Fehler bei der API-Abfrage:",status,error);console.groupEnd()}reject(new Error(`Fehler bei der API-Abfrage: ${status}, ${error}`))})}})}function buildTable($table){$table.empty();const settings=getSettings($table);const $wrapper=$('<div class="'+wrapperClass+' position-relative"></div>').insertAfter($table);let tableClasses="";if(typeof settings.classes==="string"){tableClasses=settings.classes}else if(typeof settings.classes==="object"){tableClasses=settings.classes.table}const $tableResponsiveWrapper=$('<div class="position-relative- "></div>').appendTo($wrapper);$table.appendTo($tableResponsiveWrapper);const $tableTopContainer=$('<div class="mb-3 d-flex flex-column gap-2"></div>').prependTo($wrapper);const $tableTopContainerFirstRow=$('<div class="d-flex justify-content-end gap-2"></div>').appendTo($tableTopContainer);const $tableTopContainerSecondRow=$('<div class="d-flex justify-content-between gap-2"></div>').appendTo($tableTopContainer);if(settings.toolbar&&$(settings.toolbar).length>0){$(settings.toolbar).addClass("me-auto").prependTo($tableTopContainerFirstRow)}else{$("<div>").appendTo($tableTopContainerFirstRow)}const $searchWrapper=$('<div class="'+wrapperSearchClass+'"></div>').appendTo($tableTopContainerFirstRow);const $locationWrapper=$("<div>",{class:wrapperPaginationDetailsClass}).prependTo($tableTopContainerSecondRow);const $paginationContainerTop=$(`<div class="${wrapperPaginationClass} top d-flex justify-content-end"></div>`);if(["right","end"].includes(settings.paginationHAlign)){$paginationContainerTop.appendTo($tableTopContainerSecondRow)}else{$paginationContainerTop.appendTo($tableTopContainerSecondRow)}const $paginationContainerBottom=$(`<div class="${wrapperPaginationClass} bottom d-flex justify-content-end"></div>`).appendTo($wrapper);if(settings.search===true){const $searchInputGroup=$(`
    <div class="input-group">
        <span class="input-group-text"><i class="bi bi-search"></i></span>
        <input type="search" class="form-control ${inputSearchClass}" placeholder="...">
    </div>
`);$searchInputGroup.appendTo($searchWrapper)}if(settings.showRefresh){const $refreshButton=$(`<button>`,{class:"btn btn-secondary",html:'<i class="bi bi-arrow-repeat"></i>',title:"Refresh","data-role":"refresh"}).appendTo($tableTopContainerFirstRow)}$table.addClass(tableClasses);$("<thead></thead>").appendTo($table);$("<tbody></tbody>").appendTo($table);$("<tfoot></tfoot>").appendTo($table);buildTableHeader($table,settings.columns);refresh($table)}function hideLoading($table){const $overlay=getOverlay($table);$overlay.remove()}function showLoading($table){const settings=getSettings($table);const wrapper=getWrapper($table);hideLoading($table);const columnCount=settings.columns.length;const rowCount=settings.pageSize;const $overlay=$("<div>",{class:wrapperOverlayClass+" position-absolute top-0 start-0 w-100 h-100 d-flex justify-content-center align-items-start pt-5 opacity-75 bg-body",css:{zIndex:4}}).appendTo(wrapper);const $content=$(`
<div class="spinner-border"  style="width: 3rem; height: 3rem;"   role="status">
  <span class="visually-hidden">Loading...</span>
</div>`).appendTo($overlay)}function renderTable($table){const settings=getSettings($table);if(settings.debug){console.groupCollapsed("Render Table")}const wrapper=getWrapper($table);const response=$table.data("response")||{rows:[],total:0};if(settings.debug){console.log("Response:",response)}const totalRows=response.total||(response.rows?response.rows.length:0);const pageSize=settings.pageSize;const pageNumber=settings.pageNumber;let currentPageData=response.rows;if(settings.debug){console.log("Total Rows:",totalRows);console.log("Page Size:",pageSize);console.log("Page Number:",pageNumber);console.log("Rows to Render:",currentPageData.length,currentPageData);console.groupEnd()}if(settings.columns&&settings.columns.length){buildTableHeader($table,settings.columns);buildTableBody($table,currentPageData);buildTableFooter($table,settings.columns,response.rows)}const $topPaginationContainer=getPaginationContainer($table,true).empty();const $bottomPaginationContainer=getPaginationContainer($table,false).empty();const $paginationDetails=getPaginationDetailsContainer($table).empty();const $paginationDetailHtml=createPaginationDetails($table,totalRows);$paginationDetails.append($paginationDetailHtml.clone());if(settings.pagination&&pageSize!==0){const $wrapper=getWrapper($table);const $paginationHtml=createPagination($table,totalRows);if(settings.paginationVAlign==="top"||settings.paginationVAlign==="both"){$topPaginationContainer.append($paginationHtml.clone())}if(settings.paginationVAlign==="bottom"||settings.paginationVAlign==="both"){$bottomPaginationContainer.append($paginationHtml.clone())}}$table.trigger(`post-body${namespace}`,[currentPageData]);if(typeof settings.onPostBody==="function"){settings.onPostBody(currentPageData)}}function createPaginationDetails($table,totalRows){const settings=getSettings($table);const pageSize=settings.pageSize||totalRows;const currentPage=settings.pageNumber||1;const startRow=totalRows===0?0:(currentPage-1)*pageSize+1;const endRow=Math.min(totalRows,currentPage*pageSize);const $paginationDetailWrapper=$("<div>",{class:"d-flex align-items-center","data-role":"tablePaginationPageSize"});const $paginationText=$("<span>",{class:"mx-2"}).html(`<div class="badge text-bg-secondary">${startRow} - ${endRow} / ${totalRows}</div>`);const $dropdownToggle=$("<button>",{class:"btn btn-secondary dropdown-toggle me-1",type:"button",id:"dropdownPaginationPageSize","data-bs-toggle":"dropdown","aria-expanded":"false"}).html((pageSize===totalRows?"All":pageSize)+' <i class="bi bi-list-columns-reverse"></i>');const $dropdownMenu=$("<ul>",{class:"dropdown-menu","aria-labelledby":"dropdownPaginationPageSize"});settings.pageList.filter(page=>page==="All"||page<totalRows).forEach(page=>{const value=page==="All"?0:page;const isAll=value===0;const isActive=isAll&&pageSize===0||page===pageSize;const text=isAll?"All":page;const $dropdownItem=$("<li>").append($("<a>",{class:`dropdown-item ${isActive?"active":""}`,href:"#","data-page":value}).text(text));$dropdownMenu.append($dropdownItem)});const $rowsPerPageText=$("<span>").text("");$paginationDetailWrapper.append($dropdownToggle,$dropdownMenu,$paginationText);return $paginationDetailWrapper}function createPagination($table,totalRows){const settings=getSettings($table);const totalPages=Math.ceil(totalRows/settings.pageSize);const currentPage=settings.pageNumber||1;const $paginationWrapper=$("<nav></nav>",{"data-role":"tablePagination"});const $paginationList=$("<ul></ul>",{class:"pagination justify-content-center m-0"}).appendTo($paginationWrapper);const $prevItem=$("<li></li>",{"data-role":"previous",class:`page-item ${currentPage===1?"disabled":""}`}).appendTo($paginationList);$("<a></a>",{class:"page-link",href:"#",tabindex:currentPage===1?"-1":"","aria-disabled":currentPage===1?"true":"false",html:'<i class="bi bi-chevron-left"></i>'}).appendTo($prevItem).on("click",function(e){e.preventDefault();if(currentPage>1){settings.pageNumber=currentPage-1;setSettings($table,settings);refresh($table)}});const visiblePages=calculateVisiblePages(totalPages,currentPage);visiblePages.forEach(page=>{if(page==="..."){$("<li></li>",{class:"page-item disabled"}).append($("<a></a>",{class:"page-link",text:"..."})).appendTo($paginationList)}else{const $pageItem=$("<li></li>",{class:`page-item ${page===currentPage?"active":""}`}).appendTo($paginationList);$("<a></a>",{class:"page-link",href:"#",text:page}).appendTo($pageItem).on("click",function(e){e.preventDefault();if(page!==currentPage){settings.pageNumber=page;setSettings($table,settings);refresh($table)}})}});const $nextItem=$("<li></li>",{class:`page-item ${currentPage===totalPages?"disabled":""}`}).appendTo($paginationList);$("<a></a>",{"data-role":"next",class:"page-link",href:"#",tabindex:currentPage===totalPages?"-1":"","aria-disabled":currentPage===totalPages?"true":"false",html:'<i class="bi bi-chevron-right"></i>'}).appendTo($nextItem).on("click",function(e){e.preventDefault();if(currentPage<totalPages){settings.pageNumber=currentPage+1;setSettings($table,settings);refresh($table)}});return $paginationWrapper}function calculateVisiblePages(totalPages,currentPage){const visiblePages=[];if(currentPage<=4){for(let i=1;i<=Math.min(5,totalPages);i++){visiblePages.push(i)}if(totalPages>5){visiblePages.push("...");visiblePages.push(totalPages)}}else if(currentPage>=totalPages-3){visiblePages.push(1);if(totalPages>5){visiblePages.push("...")}for(let i=Math.max(totalPages-4,1);i<=totalPages;i++){visiblePages.push(i)}}else{visiblePages.push(1);visiblePages.push("...");visiblePages.push(currentPage-1);visiblePages.push(currentPage);visiblePages.push(currentPage+1);visiblePages.push("...");visiblePages.push(totalPages)}return visiblePages}function buildTableHeader($table,columns){const settings=getSettings($table);if(settings.showHeader===false){return}let tableClasses="";if(typeof settings.classes==="object"){tableClasses=settings.classes.thead}if(columns&&columns.length){const $thead=$table.find("thead").empty().addClass(tableClasses);const $tr=$("<tr></tr>").appendTo($thead);columns.forEach(column=>{if(column.visible===false){return}const html=[`<div class="d-flex align-items-center justify-content-between">`,`<span>${column.title??""}</span>`];if(column.sortable===true){html.push(`<span><i class="bi bi-caret-down"></i></span>`)}html.push(`</div>`);const $th=$("<th>",{html:html.join("")}).appendTo($tr);$th.attr("data-sortable",column.sortable===true?"true":"false");$th.attr("data-sort-name",column.field);$th.attr("data-sort-order",settings.sortOrder??"")})}}function buildTableFooter($table,columns,data){const settings=getSettings($table);if(settings.showFooter===false){return}let tableClasses="";if(typeof settings.classes==="object"){tableClasses=settings.classes.tfoot}if(columns&&columns.length){if(column.visible===false){return}const $tfoot=$table.find("tfoot").empty().addClass(tableClasses);const $tr=$("<tr></tr>").appendTo($tfoot);columns.forEach(column=>{let value="";if(typeof column.footerFormatter==="function"){value=column.footerFormatter(data)}const $td=$("<td>",{html:value}).appendTo($tr)})}}function buildTableBody($table,rows){const settings=getSettings($table);const $tbody=$table.find("tbody").empty();if(rows&&rows.length){let tableClasses="";if(typeof settings.classes==="object"){tableClasses=settings.classes.tbody}$tbody.addClass(tableClasses);let trIndex=0;rows.forEach(row=>{const $tr=$("<tr>",{"data-index":trIndex}).appendTo($tbody);if(typeof settings.rowStyle==="function"){settings.rowStyle(row,trIndex,$tr)}if(settings.columns&&settings.columns.length){settings.columns.forEach(column=>{if(column.visible===false){return}buildTableBodyTd(column,row,$tr)})}trIndex++})}else{const $tr=$("<tr></tr>").appendTo($tbody);const $td=$("<td>",{colspan:getCountColumns($table),class:"text-center",html:settings.formatNoMatches()}).appendTo($tr)}}function getCountColumns($table,onlyVisible=true){const settings=getSettings($table);if(!settings.columns||!settings.columns.length){return 0}return settings.columns.filter(column=>!onlyVisible||column.visible!==false).length}function buildTableBodyTd(column,row,$tr){if(column.field){let classList=[];if(column.class){column.class.split(" ").forEach(className=>{classList.push(className)})}if(column.align){classList.push("text-"+column.align)}if(column.valign){classList.push("align-"+column.valign)}const $td=$("<td>",{class:classList.join(" ")}).appendTo($tr);let value=row[column.field]??" - ";if(column.formatter&&typeof column.formatter==="function"){const customValue=column.formatter(value,row,$tr.data("index"),$td);if(typeof customValue==="string"&&customValue.trim()!==""){value=customValue}}$td.html(value);if(column.events){for(const[eventSelector,eventHandler]of Object.entries(column.events)){const splitEvent=eventSelector.split(" ");const selector=splitEvent.pop();const eventTypes=splitEvent.join(" ");if(selector){$td.on(eventTypes,selector,function(e){const index=$tr.data("index");eventHandler(e,row[column.field]??null,row,index)})}else{$td.on(eventTypes,function(e){const index=$tr.data("index");eventHandler(e,row[column.field]??null,row,index)})}}}}}function getSettings($table){return $table.data("bsTable").settings}function getWrapper($table){return $table.closest(`.${wrapperClass}`)}function getClosestWrapper($element){return $element.closest(`.${wrapperClass}`)}function getPaginationContainer($table,top){const $wrapper=getWrapper($table);const className=top?"top":"bottom";const $pagination=$wrapper.find(`.${wrapperPaginationClass}.${className}`).filter(function(){return getClosestWrapper($(this))[0]===$wrapper[0]}).first();return $pagination.length>0?$pagination:$()}function getPaginationDetailsContainer($table){const $wrapper=getWrapper($table);const $pagination=$wrapper.find(`.${wrapperPaginationDetailsClass}`).filter(function(){return getClosestWrapper($(this))[0]===$wrapper[0]}).first();return $pagination.length>0?$pagination:$()}function getSearchInput($table){const $wrapper=getWrapper($table);const $searchInput=$wrapper.find("."+inputSearchClass).filter(function(){return getClosestWrapper($(this))[0]===$wrapper[0]}).first();return $searchInput.length>0?$searchInput:$()}function getOverlay($table){const $wrapper=getWrapper($table);const $overlay=$wrapper.find("."+wrapperOverlayClass).filter(function(){return getClosestWrapper($(this))[0]===$wrapper[0]}).first();return $overlay.length>0?$overlay:$()}function setSettings($table,settings){const data=$table.data("bsTable");if(data){data.settings=settings}$table.data("bsTable",data)}function isValueEmpty(value){if(value===null||value===undefined){return true}if(Array.isArray(value)){return value.length===0}if(typeof value==="string"){return value.trim().length===0}return false}function events($table){const wrapper=getWrapper($table);let searchTimeout;wrapper.on("click",`[data-sortable="true"]`,function(e){const $th=$(e.currentTarget);if(getClosestWrapper($th)[0]===wrapper[0]){const sortName=$th.attr("data-sort-name");let sortOrder=$th.attr("data-sort-order");if(sortOrder==="asc"){sortOrder="desc"}else if(sortOrder==="desc"){sortOrder=""}else{sortOrder="asc"}$th.attr("data-sort-order",sortOrder);const settings=getSettings($table);settings.sortName=sortName;settings.sortOrder=sortOrder;setSettings($table,settings);refresh($table)}}).on("click",`[data-role="tablePaginationPageSize"] .dropdown-item`,function(e){e.preventDefault();const $a=$(e.currentTarget);if(getClosestWrapper($a)[0]===wrapper[0]){const settings=getSettings($table);const response=$table.data("response");settings.pageSize=parseInt($a.data("page"));const totalRows=response.total;const maxPageNumber=Math.ceil(totalRows/settings.pageSize);if(settings.pageNumber>maxPageNumber){console.warn(`Seite ${settings.pageNumber} ist ungültig. Fallback auf letzte Seite (${maxPageNumber}).`);settings.pageNumber=maxPageNumber}setSettings($table,settings);refresh($table)}}).on("click",`button[data-role="refresh"]`,function(e){e.preventDefault();refresh($table)}).on("input",`.${inputSearchClass}`,function(e){const searchField=$(e.currentTarget);if(getClosestWrapper(searchField)[0]===wrapper[0]){clearTimeout(searchTimeout);searchTimeout=setTimeout(function(){const settings=getSettings($table);settings.pageNumber=1;setSettings($table,settings);refresh($table)},400)}}).on("click",`.${wrapperPaginationClass} .page-link`,function(e){e.preventDefault();const $pageLink=$(e.currentTarget);const $paginationWrapper=getClosestWrapper($pageLink);if($paginationWrapper[0]!==wrapper[0]){return}const settings=getSettings($table);if($pageLink.parent().hasClass("disabled")||$pageLink.parent().hasClass("active")){return}const action=$pageLink.attr("data-role")||$pageLink.html().toLowerCase().trim();const response=$table.data("response")||{rows:[],total:0};const totalPages=Math.ceil(response.total/settings.pageSize);if(action.includes("previous")||action.includes("left")){settings.pageNumber=Math.max(1,settings.pageNumber-1)}else if(action.includes("next")||action.includes("right")){settings.pageNumber=Math.min(totalPages,settings.pageNumber+1)}else{const pageNum=parseInt($pageLink.text().trim(),10);if(!isNaN(pageNum)){settings.pageNumber=pageNum}}setSettings($table,settings);refresh($table)})}})(jQuery);